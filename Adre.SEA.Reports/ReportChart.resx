<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>